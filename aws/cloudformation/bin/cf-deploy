#!/bin/sh -e

export AWS_PROFILE=diko

# include
. $(dirname $(realpath -m $0))/include/main

WORKING_DIR=$(pwd)

OUTPUT_DIRECTORY=${WORKING_DIR}/dist
DEPLOY_LOG_FILE=${OUTPUT_DIRECTORY}/build.log

mkdir -p ${OUTPUT_DIRECTORY}
echo "" > ${DEPLOY_LOG_FILE}
set_log_file ${DEPLOY_LOG_FILE}

report_topic "Deploying Cloudformation Stack: $(get_stack_name)"

# cf_package_stack ${WORKING_DIR}

error_fun() {
  echo "failed"
  return 1
}

piped_fun() {
  echo "current code: $1"

  return 0
}


error_fun || echo "end failed $?"

TEST=$(error_fun) || echo "sulod"






# # build if not yet built
# if [ ! -f ${DEPLOYMENT_MANIFEST} ] || [ ! -f ${OUTPUT_TEMPLATE} ]; then
#   SHOULD_BUILD=1
# fi

# # build layers
# if [ ${SHOULD_BUILD} -eq 1 ]; then
#   report_step "Build Layers"
#   build_layers ${OUTPUT_DIRECTORY}
# else
#   report_step "Skipped Build Layers"
# fi

# # build package
# if [ ${SHOULD_BUILD} -eq 1 ]; then
#   report_step "Build Package"
#   build_package ${OUTPUT_DIRECTORY}
# else
#   report_step "Skipped Package"
# fi

# # deploy
# if [ -f ${DEPLOYMENT_MANIFEST} ] && [ -f ${OUTPUT_TEMPLATE} ]; then
#   if [ ${SHOULD_BUILD} -eq 1 ]; then
#     report_step "Deploy Stack"
#   else
#     report_step "Redeploy Stack"
#   fi

#   deploy_build ${OUTPUT_DIRECTORY}
# else
#   report_step "Skipped deployment"
# fi
